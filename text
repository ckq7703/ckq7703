from pymodbus.server import StartTcpServer
from pymodbus.datastore import ModbusSlaveContext, ModbusServerContext
import logging

# Cấu hình logging
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',  # Định dạng log
    level=logging.INFO  # Mức độ log
)
log = logging.getLogger()

# Tạo Holding Registers (có thể là một danh sách rỗng hoặc với giá trị mặc định)
store = ModbusSlaveContext(hr=[0] * 100)  # 100 Holding Registers

# Tạo context Modbus
context = ModbusServerContext(slaves=store, single=True)

# Khởi động server Modbus
if __name__ == "__main__":
    log.info("Starting Modbus server...")  # Ghi log thông tin khởi động server
    try:
        StartTcpServer(context, address=("172.168.1.11", 502))
    except Exception as e:
        log.error(f"Error starting Modbus server: {e}")  # Ghi log lỗi nếu có










---------------------------------
from pymodbus.client import ModbusTcpClient
import time

# Kết nối tới server
client = ModbusTcpClient('172.168.1.11', port=502)
client.connect()

# Ghi dữ liệu vào Holding Register
message = [1, 2, 3, 4, 5]  # Dữ liệu cần ghi
client.write_registers(0, message)

# Đọc dữ liệu từ Holding Register
result = client.read_holding_registers(0, 5)
print(f"Received data: {result.registers}")

# Đóng kết nối
client.close()
    client.close()
    log.info("Connection closed.")



